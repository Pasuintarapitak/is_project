import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import tensorflow_datasets as tfds

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
def load_model():
    return tf.keras.models.load_model('models/MobileNetV2_model.keras')

model = load_model()

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î `stanford_dogs` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏™‡∏∏‡∏ô‡∏±‡∏Ç
def get_label_map():
    _, info = tfds.load("stanford_dogs", with_info=True)
    return info.features['label'].int2str  # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á index ‚Üí ‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå

label_map = get_label_map()

def preprocess_image(image):
    image = image.convert("RGB")  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô RGB
    image = image.resize((128, 128))  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•
    image = np.array(image) / 255.0  # Normalize ‡πÄ‡∏õ‡πá‡∏ô 0-1
    image = np.expand_dims(image, axis=0)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏¥‡∏ï‡∏¥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô (1, 128, 128, 3)
    return image

# UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Streamlit
st.title("üê∂ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏™‡∏∏‡∏ô‡∏±‡∏Ç‡∏î‡πâ‡∏ß‡∏¢ AI")

uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏∏‡∏ô‡∏±‡∏Ç", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="üì∏ ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", use_column_width=True)

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    processed_image = preprocess_image(image)
    predictions = model.predict(processed_image)
    
    # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ
    predicted_class = np.argmax(predictions)  # ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    confidence = np.max(predictions)  # ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à
    predicted_label = label_map(predicted_class)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    st.subheader("üîç ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")
    st.write(f"üê∂ ‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏™‡∏∏‡∏ô‡∏±‡∏Ç: **{predicted_label}**")
    st.write(f"‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: **{confidence:.2%}**")
